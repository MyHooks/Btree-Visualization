// generated by Fast Light User Interface Designer (fluid) version 1.0302
#include "btree.h"

LinkedListStack::LinkedListStack(int x, int y, int w, int h, const char* t):Fl_Double_Window(x,y,w,h,t) {
}

LinkedListStack *dw=(LinkedListStack *)0;

void LinkedListStack::draw() {
    Fl_Double_Window::draw();
    btree* tree = new btree();
    tree->insert("80");
    tree->insert("40");
    tree->insert("90");
    tree->insert("25");
    tree->insert("55");
    tree->insert("56");
    tree->insert("49");
    tree->insert("33");
    tree->insert("13");
    tree->insert("85");
    tree->insert("95");
}

int main(int argc, char **argv) {
  { dw = new LinkedListStack(0, 0, 1920, 1017, "Binary Tree Visualization");
    dw->box(FL_FLAT_BOX);
    dw->color(FL_BACKGROUND_COLOR);
    dw->selection_color(FL_BACKGROUND_COLOR);
    dw->labeltype(FL_NO_LABEL);
    dw->labelfont(0);
    dw->labelsize(14);
    dw->labelcolor(FL_FOREGROUND_COLOR);
    dw->align(Fl_Align(FL_ALIGN_TOP));
    dw->when(FL_WHEN_RELEASE);
    { 
        btree* tree = new btree();
        tree->insert("80");
        tree->insert("40");
        tree->insert("90");
        tree->insert("25");
        tree->insert("55");
        tree->insert("56");
        tree->insert("49");
        tree->insert("33");
        tree->insert("13");
        tree->insert("85");
        tree->insert("95");
    } // Fl_Group* o
    dw->end();
  } // LinkedListStack* dw
  dw->show(argc, argv);
  return Fl::run();
}
